# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: matrix-js-sdk
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-communicate-matrix-js-sdk
  - repository: matrix-react-sdk
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-communicate-matrix-react-sdk
  - repository: aether-host-files
    type: git
    name: Pegacorn/aether-host-files
    
trigger:
- master

pr:
- nomatch

variables:
# Could potentially parse this from  $(Build.Repository.Name) = fhirfactory/pegacorn
#  dockerImageName: '$(Build.Repository.Name)'
  dockerImageName: 'pegacorn-communicate-web'
  projectVersion: '1.0.0-snapshot'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- checkout: matrix-js-sdk
- checkout: matrix-react-sdk
- checkout: aether-host-files
- bash: |
    buildTimestamp=$(TZ='Australia/Sydney' date --rfc-3339='seconds')
    cd $(System.DefaultWorkingDirectory)/pegacorn-communicate-app-web
    cp -r ../pegacorn-communicate-matrix-js-sdk .
    cp -r ../pegacorn-communicate-matrix-react-sdk .
    cp -rf ../aether-host-files/common/element-web/matrix-react-sdk/* pegacorn-communicate-matrix-react-sdk/
    cp -rf ../aether-host-files/common/element-web/lingo-app-web/* .
- task: Docker@2
  displayName: 'Build a docker image'
  inputs:
    containerRegistry: 'AetherAzureContainerRegistry'
    repository: '$(dockerImageName)'
    tags: '$(projectVersion)'
    command: 'build'
    Dockerfile: 'pegacorn-communicate-app-web/Dockerfile'
    arguments: '--build-arg IMAGE_BUILD_TIMESTAMP="$(buildTimestamp)"'
- task: Docker@2
  displayName: 'Push a docker image'
  inputs:
    containerRegistry: 'AetherAzureContainerRegistry'
    repository: '$(dockerImageName)'
    tags: '$(projectVersion)'
    command: 'push'
